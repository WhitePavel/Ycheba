untracked(неотслеживаемый) - git видит что такой существует но е следит за изменениями в нём
у него нет файлов зафиксированных в коммитах
.
staged(подготовленный) - файл после выполнения git add поподает в staging area
/indexed
/cached

tracked(отслеживаемый) - файлы после add и commit закомичен и не изменён.

modified(изменённый) - файл был подготовлен но изменён

Дополнить коммит новыми файлами можно
--amend РАССЧИТАН ТОЛЬКО НА ПОСЛЕДНИЙ КОММИТ!!!. 
Сперва введя команду git add **
** - нужный файл
потом git commit --amend --no-edit 
с опцией --amend команда commit не создаст новый коммит а дополнит последний
просто добавиа в него новый файл.
--no-edit - сообщает команде commit что сообщение нужно оставить как было.

Если нужно изменить сообщение коммита, то нужно ввести команду 
git commit --amend -m

Если нужно сделать неизменяемые файлы в git репозитории то нужно включить эти 
файлы в .git ignore каждый файл на одну строку.

если нужно внести несколько файлов в игнор,например определённый формат, то
можно использовать *(звёздочку)

либо можно использовать ?(вопросительный знак) вопросительный знак соответсвует
одному любому символу.fil?.txt
можно перечислить диапазон определённых чисел через скобки [a-z]
fil[a-z].txt file[123].txt

/косая черта или слэш игнорирует каталоги.
/todo.txt игнорирует данный файл только в корне репозитория
если косая черта пишется после build/ то правило примениться только к папке 

если build обычный файл то он проигнорирован не будет, а если папка то будет

парные звёздочки могут использоваться под любое количество фалов **
например

docs/**/tmp может быть прочитано так docs/tmp или docs/a/s/f/123/tmp

а у docs/*/tmp обязательно будет только один но любой файл в названии

инвертация игнорирования можно использовать с помошью !(восклицательного
знака)

с помощью этого знака удобно добовлять исключения в .gitignore

*.jpeg
!doge.jpeg

git status --ignored отображает все игнорируемые файлы .

